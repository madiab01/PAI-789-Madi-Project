# -*- coding: utf-8 -*-
"""
Created on Tue May  3 08:27:29 2022

@author: Mahmoud (Madi) Diab
"""

#%%
# PART 1: Aligning the survey and metrics with the targeted data
#
#%%

#
# Create a table with the survey columns, max values for each of the columns, and the desired cdc column
#

import pandas as pd 

survey_q_v = ['CLG','CLC','DIV','CLH','RSI','FSI','FSG','FSV','FSP','FSC','MSI','MSH','MSD','MSS','MSM','ESA','ESI','GPS','GPT','GPE','RFS']

cdc_name_v = ['EPL_POV','EPL_UNEMP','EPL_PCI','SPL_THEME1','EPL_NOHSDP','RPL_THEME1','EPL_AGE65','EPL_AGE17','EPL_DISABL','SPL_THEME2','EPL_SNGPNT','RPL_THEME2','EPL_MINRTY','EPL_LIMENG','RPL_THEME3','EPL_MUNIT','EPL_MOBILE','EPL_CROWD','EPL_NOVEH','EPL_GROUPQ','SPL_THEME3']

max_value_v = [1,1,1,2,1,1,1,1,1,2,1,1,1,1,1,1,1,3,3,3,2]

headers = pd.DataFrame({'survey_q': survey_q_v, 'max_value': max_value_v, 'cdc_name': cdc_name_v})

print(headers)

headers.to_csv('cols_vals.csv', index=False)

import numpy as np

#
# trim the cdc datafile to include the desired columns for the survey, include FIPS for mapping
#

cdc = pd.read_csv('Florida.csv')

cdc = cdc.replace(-999,np.nan)

cols = pd.read_csv('cols_vals.csv')

cdc_vars = ['FIPS'] + list(cols['cdc_name'])

cdc = cdc[cdc_vars]

cdc = cdc.set_index('FIPS')

#
#  Build a scaled version of the data
#

cdc_max = cdc.max()

normalized = cdc / cdc_max

max_vals = cols['max_value'].tolist()

scaled = normalized*max_vals

#
#  Update the names
#

new_names = cols.set_index('cdc_name')

new_names = new_names['survey_q']

scaled = scaled.rename(columns=new_names)

#
#  Print a summary
#

summary = scaled.describe().T

print(summary)

#%%
# PART 2: Establishing the indices
#
#%%

#
# Establish the prefix based indices
#

for prefix in ['F','E','M','G']:
    f_vars = [c for c in scaled.columns if c.startswith(prefix)]
    scaled[prefix+'Index'] = scaled[f_vars].sum(axis = 'columns')

#
# Establish the suffix based index
#
   
for suffix in ['SI']:
    f_vars = [c for c in scaled.columns if c.endswith(suffix)]
    scaled[suffix+'Index'] = scaled[f_vars].sum(axis = 'columns')

#
# Scale all indices to 1
#

scaled['FIndex'] = scaled['FIndex'] / 6

scaled['EIndex'] = scaled['EIndex'] / 2

scaled['MIndex'] = scaled['MIndex'] / 5

scaled['GIndex'] = scaled['GIndex'] / 9

scaled['SIIndex'] = scaled['SIIndex'] / 4

#
# Export the file to csv format
#

scaled.to_csv('survey_q.csv')

#%%
# PART 3: Plotting Indices Histograms
#
#%%

#
# Create the histograms for each of the indices & safety factor
#

import matplotlib.pyplot as plt

#
# 1. Food Index
#

scaled['FIndex'].describe()

mu = 0.519507
sigma = 0.146168 

fig, ax = plt.subplots()

scaled['FIndex'].plot(kind = 'hist', ax = ax, bins = 50)
scaled['FIndex'].plot(kind = 'kde', ax = ax, secondary_y = True)
ax.set_xlabel('$\mu=0.5195$, $\sigma=0.1462$')
ax.set_ylabel('Density')
ax.set_title(r'Food Security Index')

fig.tight_layout()
plt.show()
fig.savefig('Food_Security_Index.png')

#
# 2. Education Index
#

scaled['EIndex'].describe()

mu = 0.455319
sigma = 0.196845 

fig1, ax = plt.subplots()

scaled['EIndex'].plot(kind = 'hist', ax = ax, bins = 20)
scaled['EIndex'].plot(kind = 'kde', ax = ax, secondary_y = True)

ax.set_xlabel('$\mu=0.4553$, $\sigma=0.1968$')
ax.set_ylabel('Density')
ax.set_title(r'Education Security Index')

fig1.tight_layout()
plt.show()
fig1.savefig('Education_Security_Index.png')

#
# 3. Medical Index
#

scaled['MIndex'].describe()

mu = 0.492199
sigma = 0.226689 

fig2, ax = plt.subplots()

scaled['MIndex'].plot(kind = 'hist', ax = ax, bins = 30)
scaled['MIndex'].plot(kind = 'kde', ax = ax, secondary_y = True)

ax.set_xlabel('$\mu=0.4922$, $\sigma=0.2267$')
ax.set_ylabel('Density')
ax.set_title(r'Medical Security Index')

fig2.tight_layout()
plt.show()
fig2.savefig('Medical_Security_Index.png')

#
# 4. Governmental Index
#

scaled['GIndex'].describe()

mu = 0.447836
sigma = 0.234094 

fig3, ax = plt.subplots()

scaled['GIndex'].plot(kind = 'hist', ax = ax, bins = 30)
scaled['GIndex'].plot(kind = 'kde', ax = ax, secondary_y = True)

ax.set_xlabel('$\mu=0.4478$, $\sigma=0.2341$')
ax.set_ylabel('Density')
ax.set_title(r'Governmental Services Index')

fig3.tight_layout()
plt.show()
fig3.savefig('Gov_Services_Index.png')

#
# 5. Income Security Index
#

scaled['SIIndex'].describe()

mu = 0.477317
sigma = 0.228463 

fig4, ax = plt.subplots()

scaled['SIIndex'].plot(kind = 'hist', ax = ax, bins = 30)
scaled['SIIndex'].plot(kind = 'kde', ax = ax, secondary_y = True)

ax.set_xlabel('$\mu=0.4773$, $\sigma=0.2285$')
ax.set_ylabel('density')
ax.set_title(r'Income Security Index')

fig4.tight_layout()
plt.show()
fig4.savefig('Income_Security_Index.png')

#
# 6. Safety Indicator
#

scaled['RFS'].describe()

mu = 0.992476
sigma = 0.543178 

fig5, ax = plt.subplots()

scaled['RFS'].plot(kind = 'hist', ax = ax, bins = 30)
scaled['RFS'].plot(kind = 'kde', ax = ax, secondary_y = True)

ax.set_xlabel('$\mu=0.9925$, $\sigma=0.5432$')
ax.set_ylabel('density')
ax.set_title(r'Feeling Safe')

fig5.tight_layout()
plt.show()
fig5.savefig('Feeling_Safe.png')
